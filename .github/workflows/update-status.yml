name: Atualizar Substatus no GitHub Project

on:
  repository_dispatch:
    types: [update_card_status]

jobs:
  atualizar_substatus:
    runs-on: ubuntu-latest
    steps:
      - name: Atualizar substatus no card existente
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          PROJECT_ID: PVT_kwHOA0czfM4A8xv2
          REPO_OWNER: LuamMaul
          REPO_NAME: bup2
          TICKET_ID: ${{ github.event.client_payload.ticket_id }}
          TICKET_SUBJECT: ${{ github.event.client_payload.ticket_subject }}
          TICKET_STATUS: ${{ github.event.client_payload.status }}
        run: |
          set -e

          # Substitua com os IDs reais
          SUBSTATUS_FIELD_ID="PVTSSF_lAHOA0czfM4A8xv2zgwrN44"

          # Limpa status
          STATUS_CLEAN=$(echo "$TICKET_STATUS" | xargs)

          echo "üîÅ Status recebido: '$STATUS_CLEAN'"

          # Mapa: Status Freshdesk ‚Üí OptionID GitHub
          case "$STATUS_CLEAN" in
            "Open") OPTION_ID="6c6483d2" ;;
            "Pending") OPTION_ID="f784b110" ;;
            "Em andamento") OPTION_ID="756cd9fa" ;;
            "Em desenvolvimento") OPTION_ID="7515a9f1" ;;
            "Acesso remoto") OPTION_ID="817d0097" ;;
            "Aguardando integra√ß√£o") OPTION_ID="db339eb2" ;;
            "Aguardando nova vers√£o") OPTION_ID="fa016d40" ;;
            "Aguardando terceiros") OPTION_ID="12aa78ac" ;;
            "Resolved") OPTION_ID="1b154e61" ;;
            "Closed") OPTION_ID="d894a32b" ;;
            *) OPTION_ID="" ;;
          esac

          if [ -z "$OPTION_ID" ]; then
            echo "‚ö†Ô∏è Status '$STATUS_CLEAN' n√£o mapeado, saindo."
            exit 0
          fi

          TITLE="$TICKET_ID - $TICKET_SUBJECT"

          echo "üéØ Buscando issue com t√≠tulo exato: $TITLE"

          SEARCH_QUERY="repo:$REPO_OWNER/$REPO_NAME \"$TITLE\" in:title type:issue"

          SEARCH_RESULT=$(curl -s -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"query\": \"query {
              search(query: \\\"$SEARCH_QUERY\\\", type: ISSUE, first: 1) {
                nodes {
                  ... on Issue {
                    id
                    number
                    title
                  }
                }
              }
            }\"}" https://api.github.com/graphql)

          echo "üì¶ Resposta da busca:"
          echo "$SEARCH_RESULT"

          ISSUE_NODE=$(echo "$SEARCH_RESULT" | jq -c --arg title "$TITLE" '.data.search.nodes[] | select(.title == $title)')

          if [ -z "$ISSUE_NODE" ]; then
            echo "‚ùå Nenhuma issue encontrada com t√≠tulo exatamente igual a: '$TITLE'"
            exit 1
          fi

          ISSUE_ID=$(echo "$ISSUE_NODE" | jq -r '.id')
          ISSUE_NUMBER=$(echo "$ISSUE_NODE" | jq -r '.number')
          
          echo "‚úÖ Issue encontrada: #$ISSUE_NUMBER - $TITLE"

          ISSUE_ID=$(gh api graphql -f query="
          {
            repository(owner: \"LuamMaul\", name: \"bup2\") {
              issue(number: $ISSUE_NUMBER) { id }
            }
          }" | jq -r '.data.repository.issue.id')

          echo "üîé Buscando item do projeto..."

          ITEM_ID=$(gh api graphql -f query="
          {
            node(id: \"$PROJECT_ID\") {
              ... on ProjectV2 {
                items(first: 100) {
                  nodes {
                    content {
                      ... on Issue { id number }
                    }
                    id
                  }
                }
              }
            }
          }" | jq -r --arg issue_id "$ISSUE_ID" '.data.node.items.nodes[] | select(.content.id == $issue_id) | .id')

          echo "üìù Atualizando Substatus..."

          MUTATION_SUBSTATUS=$(jq -n \
            --arg projectId "$PROJECT_ID" \
            --arg itemId "$ITEM_ID" \
            --arg fieldId "$SUBSTATUS_FIELD_ID" \
            --arg optionId "$OPTION_ID" \
            '{ query: "mutation UpdateSubstatus($projectId:ID!,$itemId:ID!,$fieldId:ID!,$optionId:String!){ updateProjectV2ItemFieldValue(input:{ projectId:$projectId, itemId:$itemId, fieldId:$fieldId, value:{ singleSelectOptionId:$optionId }}){ projectV2Item{ id }}}", variables: { projectId: $projectId, itemId: $itemId, fieldId: $fieldId, optionId: $optionId } }')

          curl -s -X POST https://api.github.com/graphql \
            -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$MUTATION_SUBSTATUS"

          echo "‚úÖ Substatus atualizado!"
