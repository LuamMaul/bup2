name: Atualizar Substatus no GitHub Project

on:
  repository_dispatch:
    types: [update_card_status]

jobs:
  atualizar_substatus:
    runs-on: ubuntu-latest
    steps:
      - name: Atualizar substatus no card existente
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          PROJECT_ID: PVT_kwHOA0czfM4A8xv2
          TICKET_ID: ${{ github.event.client_payload.ticket_id }}
          TICKET_SUBJECT: ${{ github.event.client_payload.ticket_subject }}
          TICKET_STATUS: ${{ github.event.client_payload.status }}
          REPO_OWNER: LuamMaul
          REPO_NAME: bup2
        run: |
          set -e

          TITLE="$TICKET_ID - $TICKET_SUBJECT"
          echo "üîÅ Status recebido: '$TICKET_STATUS'"
          echo "üéØ Buscando issue com t√≠tulo exato: $TITLE"

          # üîé Monta a query segura com jq
          SEARCH_QUERY="repo:$REPO_OWNER/$REPO_NAME \"$TITLE\" in:title type:issue"
          GRAPHQL_QUERY=$(jq -n --arg q "$SEARCH_QUERY" '
          {
            query: "query ($q: String!) { search(query: $q, type: ISSUE, first: 1) { nodes { ... on Issue { id number title } } } }",
            variables: { q: $q }
          }')

          SEARCH_RESULT=$(curl -s -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$GRAPHQL_QUERY" https://api.github.com/graphql)

          echo "üì¶ Resposta da busca:"
          echo "$SEARCH_RESULT"

          ISSUE_NODE=$(echo "$SEARCH_RESULT" | jq -c --arg title "$TITLE" '.data.search.nodes[] | select(.title == $title)')

          if [ -z "$ISSUE_NODE" ]; then
            echo "‚ùå Nenhuma issue encontrada com t√≠tulo exatamente igual a: '$TITLE'"
            exit 1
          fi

          ISSUE_ID=$(echo "$ISSUE_NODE" | jq -r '.id')
          ISSUE_NUMBER=$(echo "$ISSUE_NODE" | jq -r '.number')
          echo "‚úÖ Issue encontrada: #$ISSUE_NUMBER - $TITLE"

          echo "üìé Buscando item (card) no projeto..."
          ITEM_QUERY=$(jq -n --arg projectId "$PROJECT_ID" '
          {
            query: "query($projectId: ID!) {
              node(id: $projectId) {
                ... on ProjectV2 {
                  items(first: 100) {
                    nodes {
                      id
                      content { ... on Issue { id number } }
                    }
                  }
                }
              }
            }",
            variables: { projectId: $projectId }
          }')

          ITEM_RESULT=$(curl -s -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$ITEM_QUERY" https://api.github.com/graphql)

          ITEM_ID=$(echo "$ITEM_RESULT" | jq -r --arg issueId "$ISSUE_ID" '.data.node.items.nodes[] | select(.content.id == $issueId) | .id')

          if [ -z "$ITEM_ID" ]; then
            echo "‚ùå Item do projeto n√£o encontrado para a issue."
            exit 1
          fi

          echo "üìå ITEM_ID: $ITEM_ID"

          echo "üéØ Interpretando substatus..."

          STATUS_CLEAN=$(echo "$TICKET_STATUS" | xargs)

          # üëá MAPA: Status do Freshdesk ‚Üí ID da op√ß√£o no campo 'Substatus' do GitHub
          case "$STATUS_CLEAN" in
            "Open") OPTION_ID="6c6483d2" ;;
            "Pending") OPTION_ID="f784b110" ;;
            "Em andamento") OPTION_ID="756cd9fa" ;;
            "Em desenvolvimento") OPTION_ID="7515a9f1" ;;
            "Acesso remoto") OPTION_ID="817d0097" ;;
            "Aguardando integra√ß√£o") OPTION_ID="db339eb2" ;;
            "Aguardando nova vers√£o") OPTION_ID="fa016d40" ;;
            "Aguardando terceiros") OPTION_ID="12aa78ac" ;;
            "Resolved") OPTION_ID="1b154e61" ;;
            "Closed") OPTION_ID="d894a32b" ;;
            *) OPTION_ID="" ;;
          esac

          if [ -z "$OPTION_ID" ]; then
            echo "‚ö†Ô∏è Status '$STATUS_CLEAN' n√£o mapeado para nenhuma op√ß√£o de Substatus."
            exit 0
          fi

          # ID do campo Substatus no seu projeto
          FIELD_ID="PVTSSF_lAHOA0czfM4A8xv2SUBXYZ"  # ‚Üê substitua pelo real

          echo "üè∑Ô∏è Aplicando substatus no card..."

          UPDATE_MUTATION=$(jq -n \
            --arg projectId "$PROJECT_ID" \
            --arg itemId "$ITEM_ID" \
            --arg fieldId "$FIELD_ID" \
            --arg optionId "$OPTION_ID" '
            {
              query: "mutation UpdateField($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  projectV2Item { id }
                }
              }",
              variables: {
                projectId: $projectId,
                itemId: $itemId,
                fieldId: $fieldId,
                optionId: $optionId
              }
            }')

          curl -s -X POST https://api.github.com/graphql \
            -H "Authorization: bearer $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$UPDATE_MUTATION"

          echo "‚úÖ Substatus atualizado com sucesso!"
